services:
  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: storagie-api
    restart: unless-stopped
    ports:
      - '${PORT:-8000}:8000'
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - postgres
      - redis
    networks:
      - storagie-network

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: storagie-postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=storagie
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=storagie
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - storagie-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U storagie']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: storagie-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - storagie-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Mailhog (Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: storagie-mailhog
    restart: unless-stopped
    ports:
      - '1025:1025' # SMTP
      - '8025:8025' # Web UI
    networks:
      - storagie-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  storagie-network:
    driver: bridge
